{"version":3,"sources":["../src/Log/Private/parse.ts","../src/Log/Private/timestamp.ts","../src/Log/Private/supports.ts","../src/Log/Colors/cyan.ts","../src/Log/Colors/green.ts","../src/Log/Colors/grey.ts","../src/Log/Colors/magenta.ts","../src/Log/Colors/red.ts","../src/Log/Colors/white.ts","../src/Log/Colors/yellow.ts"],"sourcesContent":["import { inspect } from 'node:util'\nimport { isObject, isArray, isDate, isUndefined, isString, isError } from '../../Utils'\n\nexport const parse: (opts: ParseOpts, ...args: any[]) => string = (opts, ...args) => args.map(arg => {\n  const { colors, showHidden, logType } = opts\n\n  const shouldInspect = (\n    isObject(arg) ||\n    isArray(arg) ||\n    isDate(arg) ||\n    isUndefined(arg)\n  )\n\n  if ((shouldInspect || showHidden) && !isString(arg)) return inspect(arg, {\n    showHidden: showHidden,\n    depth: null,\n    colors: colors\n  })\n\n  return (isError(arg) && logType === 'error') ? arg.stack : arg\n}).join(' ')\n\ninterface ParseOpts {\n  colors?: boolean\n  showHidden?: boolean\n  logType?: LogType\n}\n\nexport type LogType = 'log' | 'info' | 'warn' | 'error' | 'debug'\n\n","const { locale } = (() => Intl.DateTimeFormat().resolvedOptions())()\n\nexport const timestamp: () => string = () => new Date().toLocaleString(locale, {\n  formatMatcher: 'best fit',\n  weekday: 'short',\n  day: '2-digit',\n  month: 'short',\n  year: 'numeric',\n  hour: '2-digit',\n  minute: '2-digit',\n  second: '2-digit',\n  hour12: false\n})\n","import { env, platform, stdout } from 'node:process'\n\nexport function formatting (): boolean {\n  // super basic color support check\n\n  if ((/^screen|^xterm|^vt100|^vt220|^rxvt|color|ansi|cygwin|linux/i).test(env.TERM ?? '')) return true\n  if ('COLORTERM' in env) return true\n  if (platform === 'win32') return true\n  if (stdout.hasColors()) return true\n\n  return false\n}\n","import type { ColorFN } from '.'\nimport { parse } from '../Private'\n\nexport const cyan: ColorFN = (...args) => `\\x1b[96m${parse({ colors: false }, ...args)}\\x1b[0m`\n","import type { ColorFN } from '.'\nimport { parse } from '../Private'\n\nexport const green: ColorFN = (...args) => `\\x1b[92m${parse({ colors: false }, ...args)}\\x1b[0m`\n","import type { ColorFN } from '.'\nimport { parse } from '../Private'\n\nexport const grey: ColorFN = (...args) => `\\x1b[90m${parse({ colors: false }, ...args)}\\x1b[0m`\n","import type { ColorFN } from '.'\nimport { parse } from '../Private'\n\nexport const magenta: ColorFN = (...args) => `\\x1b[95m${parse({ colors: false }, ...args)}\\x1b[0m`\n","import type { ColorFN } from '.'\nimport { parse } from '../Private'\n\nexport const red: ColorFN = (...args) => `\\x1b[91m${parse({ colors: false }, ...args)}\\x1b[0m`\n","import type { ColorFN } from '.'\nimport { parse } from '../Private'\n\nexport const white: ColorFN = (...args) => `\\x1b[97m${parse({ colors: false }, ...args)}\\x1b[0m`\n","import type { ColorFN } from '.'\nimport { parse } from '../Private'\n\nexport const yellow: ColorFN = (...args) => `\\x1b[93m${parse({ colors: false }, ...args)}\\x1b[0m`\n"],"mappings":";;;;;;;;;;AAAA,SAAS,eAAe;AAGjB,IAAM,QAAqD,CAAC,SAAS,SAAS,KAAK,IAAI,SAAO;AACnG,QAAM,EAAE,QAAQ,YAAY,QAAQ,IAAI;AAExC,QAAM,gBACJ,SAAS,GAAG,KACZ,QAAQ,GAAG,KACX,OAAO,GAAG,KACV,YAAY,GAAG;AAGjB,OAAK,iBAAiB,eAAe,CAAC,SAAS,GAAG,EAAG,QAAO,QAAQ,KAAK;AAAA,IACvE;AAAA,IACA,OAAO;AAAA,IACP;AAAA,EACF,CAAC;AAED,SAAQ,QAAQ,GAAG,KAAK,YAAY,UAAW,IAAI,QAAQ;AAC7D,CAAC,EAAE,KAAK,GAAG;;;ACpBX,IAAM,EAAE,OAAO,KAAK,MAAM,KAAK,eAAe,EAAE,gBAAgB,GAAG;AAE5D,IAAM,YAA0B,OAAM,oBAAI,KAAK,GAAE,eAAe,QAAQ;AAAA,EAC7E,eAAe;AAAA,EACf,SAAS;AAAA,EACT,KAAK;AAAA,EACL,OAAO;AAAA,EACP,MAAM;AAAA,EACN,MAAM;AAAA,EACN,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AACV,CAAC;;;ACZD,SAAS,KAAK,UAAU,cAAc;AAE/B,SAAS,aAAuB;AAGrC,MAAK,8DAA+D,KAAK,IAAI,QAAQ,EAAE,EAAG,QAAO;AACjG,MAAI,eAAe,IAAK,QAAO;AAC/B,MAAI,aAAa,QAAS,QAAO;AACjC,MAAI,OAAO,UAAU,EAAG,QAAO;AAE/B,SAAO;AACT;;;ACRO,IAAM,OAAgB,IAAI,SAAS,WAAW,MAAM,EAAE,QAAQ,MAAM,GAAG,GAAG,IAAI,CAAC;;;ACA/E,IAAM,QAAiB,IAAI,SAAS,WAAW,MAAM,EAAE,QAAQ,MAAM,GAAG,GAAG,IAAI,CAAC;;;ACAhF,IAAM,OAAgB,IAAI,SAAS,WAAW,MAAM,EAAE,QAAQ,MAAM,GAAG,GAAG,IAAI,CAAC;;;ACA/E,IAAM,UAAmB,IAAI,SAAS,WAAW,MAAM,EAAE,QAAQ,MAAM,GAAG,GAAG,IAAI,CAAC;;;ACAlF,IAAM,MAAe,IAAI,SAAS,WAAW,MAAM,EAAE,QAAQ,MAAM,GAAG,GAAG,IAAI,CAAC;;;ACA9E,IAAM,QAAiB,IAAI,SAAS,WAAW,MAAM,EAAE,QAAQ,MAAM,GAAG,GAAG,IAAI,CAAC;;;ACAhF,IAAM,SAAkB,IAAI,SAAS,WAAW,MAAM,EAAE,QAAQ,MAAM,GAAG,GAAG,IAAI,CAAC;","names":[]}